{"paragraphs":[{"text":"%pyspark\n\nimport os\nimport glob\nimport pandas as pd\n\np = '/home/gokul/Documents/pollution/'                    \nfiles = glob.glob(os.path.join(p, \"*.csv\"))    \n\ndf  = (pd.read_csv(f) for f in files)\ndf   = pd.concat(df, ignore_index=True)\n\nprint df.head(5)\n","dateUpdated":"2017-03-25T23:54:38-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490484267800_-2103056807","id":"20170325-192427_199839266","result":{"code":"SUCCESS","type":"TEXT","msg":"   ozone  particullate_matter  carbon_monoxide  sulfure_dioxide  \\\n0     98                   48               64               39   \n1     94                   52               67               41   \n2     94                   48               62               42   \n3     98                   46               65               37   \n4    100                   51               65               39   \n\n   nitrogen_dioxide  longitude  latitude            timestamp  \n0                84  10.192792  56.18146  2014-08-01 00:05:00  \n1                87  10.192792  56.18146  2014-08-01 00:10:00  \n2                82  10.192792  56.18146  2014-08-01 00:15:00  \n3                79  10.192792  56.18146  2014-08-01 00:20:00  \n4                81  10.192792  56.18146  2014-08-01 00:25:00  \n"},"dateCreated":"2017-03-25T07:24:27-0400","dateStarted":"2017-03-25T10:36:13-0400","dateFinished":"2017-03-25T10:36:30-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:211"},{"text":"%pyspark\n\ndf['longitude'] = df['longitude'].astype(str)\ndf['latitude'] = df['latitude'].astype(str)\n\ndf[\"location\"] = df[[\"longitude\" ,\"latitude\"]].apply(lambda x: ','.join(x), axis=1)\n\n","dateUpdated":"2017-03-25T23:54:38-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490486596754_2071392662","id":"20170325-200316_931071438","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-25T08:03:16-0400","dateStarted":"2017-03-25T10:39:51-0400","dateFinished":"2017-03-25T10:41:51-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:212"},{"text":"%pyspark\n\narr =  df.location.unique()\n\nprint \"Number of sensors is\" + len(arr)\n","dateUpdated":"2017-03-25T23:54:38-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/python","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490486752101_296392744","id":"20170325-200552_2017478044","result":{"code":"SUCCESS","type":"TEXT","msg":"208\n"},"dateCreated":"2017-03-25T08:05:52-0400","dateStarted":"2017-03-25T10:42:45-0400","dateFinished":"2017-03-25T10:42:46-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:213"},{"text":"%pyspark\n\nimport matplotlib \nimport matplotlib.pyplot as plt \nimport seaborn as sns\nimport StringIO \ndef show(p): \nimport plotly.plotly as py\nimport plotly.graph_objs as go\npy.sign_in(‘gkrishnan’, 'raCcZvH0wUkyyr2YlpIL')\ntrace = go.Scatter( x = data['timestamp'], y = data['ozone'] )\nlayout = dict(title = 'Time Series Plot Of Ozone', xaxis = dict(title ='Timestamp'), \nyaxis = dict(title = 'Ozone'), )\nplot = [trace]\nfig = dict(data=plot, layout=layout)\npy.plot(fig, filename='Line Chart')\n\n","dateUpdated":"2017-03-25T23:54:38-0400","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490495310797_1283760389","id":"20170325-222830_845032866","dateCreated":"2017-03-25T10:28:30-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:214"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490500267825_951985291","id":"20170325-235107_752228220","dateCreated":"2017-03-25T23:51:07-0400","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:580","text":"%pyspark\n\nfor col in df.columns: df[col] = df[col].astype(str)\nscl = [[0.0, 'rgb(242,240,247)'],[0.2, 'rgb(218,218,235)'],[0.4, 'rgb(188,189,220)'],\n\\ [0.6, 'rgb(158,154,200)'],[0.8, 'rgb(117,107,177)'],[1.0, 'rgb(84,39,143)']]\ndf['text'] = df['ozone']\nmapplot = [ dict( type='choropleth', colorscale = scl, autocolorscale = False, \nlocations = df['latitude'], z = df['ozone'].astype(float), \n locationmode = 'USA-states', text = df['text'],\n marker = dict( line = dict ( color = 'rgb(255,255,255)', width = 2 ) ), \ncolorbar = dict( title = \"Millions USD\") ) ]\nlayout = dict( title = '2011 US Agriculture Exports by State\n(Hover for breakdown)', geo = dict( scope='usa', projection=dict( type='albers usa' ), \nshowlakes = True, lakecolor = 'rgb(255, 255, 255)'), )\nfig = dict( data=mapplot, layout=layout ) \npy.iplot( fig, filename='d3-cloropleth-map' )\nhis = [ go.Histogram( x=x ) ] \nlayout = dict(title = 'Distribution Of Ozone', xaxis = dict(title = 'Count'), \nyaxis = dict(title = 'Ozone'), )\nfigh1 = dict(data=his, layout=layout)\npy.plot(figh1)","dateUpdated":"2017-03-25T23:54:38-0400"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490500281561_-1712385518","id":"20170325-235121_1394676401","dateCreated":"2017-03-25T23:51:21-0400","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:650","text":"%pyspark\n\n\nimport plotly.plotly as py\nimport plotly.graph_objs as go\nx = data['carbon_monoxide']\nhis1 = [ go.Histogram( x=x ) ]\nlayout = dict(title = 'Distribution Of Carbon Monoxide', \nxaxis = dict(title = 'Count'), yaxis = dict(title = 'Carbon Monoxide'), )\nfigh2 = dict(data=his1, layout=layout)\npy.plot(figh2)","dateUpdated":"2017-03-25T23:54:38-0400"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala","tableHide":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490500297820_523420989","id":"20170325-235137_1754878236","dateCreated":"2017-03-25T23:51:37-0400","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:720","text":"%pyspark\n\nimport plotly.plotly as py \nimport plotly.graph_objs as go \nimport numpy as np \nx = data['sulfure_dioxide'] \nhis2 = [ go.Histogram( x=x ) ] \nlayout = dict(title = 'Distribution Of Sulfure Dioxide',\n xaxis = dict(title = 'Count'), \n yaxis = dict(title = 'Sulfure Dioxide'), ) \nfigh3 = dict(data=his2, layout=layout) \nx = data['nitrogen_dioxide']\nhis4 = [ go.Histogram( x=x ) ]\nlayout = dict(title = 'Distribution Of Nitrogen Dioxide', xaxis = dict(title = 'Count'), \nyaxis = dict(title = 'Nitrogen Dioxide'), )\nfigh5 = dict(data=his4, layout=layout)\ntrace3 = go.Scatter( x = data['timestamp'], y = data['nitrogen_dioxide'] ) \nplot3 = [trace3] layout = dict(title = 'Time Series Plot Of Nitrogen Dioxide', \nxaxis = dict(title = 'Timestamp'), yaxis = \ndict(title = 'Nitrogen Dioxide'), ) \nfig4 = dict(data=plot3, layout=layout)\nfrom tweepy.streaming import StreamListener\nfrom tweepy import OAuthHandler\nfrom tweepy import Stream\naccess_token = \"824754411826188288-YIKCP2DQNf61gGrrStyzr8RX5LGhSjG\"\naccess_token_secret = \"\tbB5W9q7IfTFVZA64fQ0jEFfjMWhj7DchS8EPqoc1E9V55\"\nconsumer_key = \"SArrLUs3FH1QWM1dzLgrJZQZR\"\nconsumer_secret = \"kWKc1hkjO4eWxBGveD1ztlIMbay7ny6aY6i289omA5FVGTMVdy\"","dateUpdated":"2017-03-25T23:54:38-0400"}],"name":"Capstone","id":"2CDWE4P9Z","angularObjects":{"2C8D5TYCW:shared_process":[],"2C8ZAQRGV:shared_process":[],"2C7J4W3HW:shared_process":[],"2CAC3P6Z4:shared_process":[],"2C78KUGHF:shared_process":[],"2C8RTV4R1:shared_process":[],"2C9RPV16D:shared_process":[],"2C7ST7U8F:shared_process":[],"2CAE5RCGC:shared_process":[],"2C7M62RZ1:shared_process":[],"2C9D9ZK9H:shared_process":[],"2C92VDMYE:shared_process":[],"2C7786RJT:shared_process":[],"2CAM8EAU2:shared_process":[],"2C975V8XD:shared_process":[],"2C7UUV17N:shared_process":[],"2C9AG2SNR:shared_process":[],"2C7JRPUKA:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}